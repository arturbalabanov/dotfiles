# Ctrl-a for prefix {{{
	unbind C-b
	set -g prefix C-a
	bind C-a send-prefix
# }}}
# Key bindings {{{
	# Navigate windows using [ and ]
	bind-key -n C-M-h select-window -t :-
	bind-key -n C-M-l select-window -t :+

	is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

	bind-key -n M-h if-shell "$is_vim" "send-keys M-h"  "select-pane -L"
	bind-key -n M-j if-shell "$is_vim" "send-keys M-j"  "select-pane -D"
	bind-key -n M-k if-shell "$is_vim" "send-keys M-k"  "select-pane -U"
	bind-key -n M-l if-shell "$is_vim" "send-keys M-l"  "select-pane -R"
	# bind-key -n M-\ if-shell "$is_vim" "send-keys M-\\" "select-pane -l"

	bind-key -T copy-mode-vi M-h select-pane -L
	bind-key -T copy-mode-vi M-j select-pane -D
	bind-key -T copy-mode-vi M-k select-pane -U
	bind-key -T copy-mode-vi M-l select-pane -R
	# bind-key -T copy-mode-vi M-\ select-pane -l

	# Split window
	bind-key C-j split-window -v -p 33
	bind-key C-l split-window -h -p 33
	bind-key C-k split-window -v -p 66 \; select-pane -l
	bind-key C-h split-window -h -p 66 \; select-pane -l

	# Toggle status line
	bind-key C-x set status

	# Repeat the last command if not in vim
	bind-key -n F5 if-shell "$is_vim" "send-keys F5"  "send-keys C-c Up Enter"

	# New window with n
	bind-key n new-window
# }}}
# Mouse mode {{{
	set-option -g mouse on
	# set-option -g mouse-utf8 off
# }}}
# Status line {{{
	set-option -g status on
	set-option -g status-interval 2
	set-option -g status-justify "centre"
	set-option -g status-left-length 60
	set-option -g status-right-length 90

	set-option -g status-bg colour235
	set-option -g status-fg white
	# set-option -g window-status-current-fg colour255

	set-option -g message-style fg=colour255,bg=colour235

	set-window-option -g pane-border-format " #T "

	set-window-option -g window-status-format "#{?#{==:#I,0},,#{?#{!=:#(echo $((#I-1))),#(tmux list-windows | grep '(active)' | grep -o '^[0-9][0-9]*')}, ,}}#W"
	set-window-option -g window-status-current-format "#[fg=colour235, bg=colour27]#[fg=colour255, bg=colour27] #W #{?window_zoomed_flag,#{?#{==:#T,#H}, , #T },}#[fg=colour27, bg=colour235]"
	set-window-option -g status-left "#[fg=colour22,bold bg=colour154] #S.#I.#P #[fg=colour154, bg=colour235]"
	set-window-option -g status-right ""
 
	# set-option -g status-left "#(~/.tmux/tmux-powerline/powerline.sh left)"
	# set-option -g status-right "#(~/.tmux/tmux-powerline/powerline.sh right)"
# }}}
# Vim mode {{{
	set-option -g word-separators ' @"=()[].,:;/|'
	set-option -ag word-separators "'"

	set-option -g mode-keys vi
	bind-key c copy-mode

	bind-key -T copy-mode-vi y send-keys -X copy-pipe 'xclip -in -selection clipboard'
	bind-key -T copy-mode-vi v send-keys -X begin-selection

	bind-key -T copy-mode-vi H send-keys -X start-of-line
	bind-key -T copy-mode-vi L send-keys -X end-of-line
#}}}
# Utilities {{{
	# set -g default-terminal 'screen-256color-bce'
	set -g default-terminal "screen-256color"
	# set-option -g default-terminal "tmux-256color"
	set-option -sg escape-time 10
	# set -ga terminal-overrides 'xterm*:smcup@:rmcup@'
	set -ga terminal-overrides ',xterm-256color:Tc'

	# Use the correct cursor shape in neovim
	# https://github.com/neovim/neovim/wiki/FAQ#cursor-shape-doesnt-change-in-tmux
	set -g -a terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'
# }}}
