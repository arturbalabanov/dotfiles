# Ctrl-a for prefix {{{
	unbind C-b
	set -g prefix C-a
	bind C-a send-prefix
# }}}
# Key bindings {{{
	bind-key -n C-M-h select-window -t :-
	bind-key -n C-M-l select-window -t :+

	# Move windows (tabs) to left and right
	bind-key -n C-M-S-l swap-window -t +1\; select-window -t +1
	bind-key -n C-M-S-h swap-window -t -1\; select-window -t -1

	is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?\.?(view|n?vim?x?)(-wrapped)?(diff)?$'"

	bind-key -n 'M-h' if-shell "$is_vim" 'send-keys M-h' { if -F '#{pane_at_left}' '' 'select-pane -L' }
	bind-key -n 'M-j' if-shell "$is_vim" 'send-keys M-j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
	bind-key -n 'M-k' if-shell "$is_vim" 'send-keys M-k' { if -F '#{pane_at_top}' '' 'select-pane -U' }
	bind-key -n 'M-l' if-shell "$is_vim" 'send-keys M-l' { if -F '#{pane_at_right}' '' 'select-pane -R' }

	# Split window
	bind-key C-j split-window -v -l 33%
	bind-key C-l split-window -h -l 33%
	bind-key C-k split-window -v -l 66% \; select-pane -l
	bind-key C-h split-window -h -l 66% \; select-pane -l

	# Toggle status line
	bind-key C-x set status

	# Repeat the last command if not in vim
	bind-key -n F5 if-shell "$is_vim" "send-keys F5"  "send-keys C-c Up Enter"

	# New window with n
	bind-key n new-window

	bind-key -n M-Enter popup
# }}}
# Mouse mode {{{
	set-option -g mouse on

	# disable right click menu
	unbind-key -n MouseDown3Pane

	# set-option -g mouse-utf8 off
# }}}
# Status line {{{
	set-option -g status on
	set-option -g status-interval 2
	set-option -g status-justify "centre"
	set-option -g status-left-length 60
	set-option -g status-right-length 90

    set-option -g status-bg "#1d2021"
    set-option -g status-fg "colour255"
	# set-option -g window-status-current-fg colour255

	set-option -g message-style "fg=colour255,bg=#1d2021"

	set-window-option -g pane-border-format " #T "

	set-window-option -g window-status-format "#{?#{==:#I,0},,#{?#{!=:#(echo $((#I-1))),#(tmux list-windows | grep '(active)' | grep -o '^[0-9][0-9]*')}, ,}}#W"
	set-window-option -g window-status-current-format "#[fg=#1d2021, bg=blue]#[fg=colour255, bg=blue] #W #{?window_zoomed_flag,#{?#{==:#T,#H}, , #T },}#[fg=blue, bg=#1d2021]"
	set-window-option -g status-left "#[fg=colour255 bg=darkred] #S.#I.#P #[fg=darkred, bg=#2d2021]"
	# set-window-option -g status-right ""
 
	# set-option -g status-left "#(~/.tmux/tmux-powerline/powerline.sh left)"
	set-window-option -g status-right "#(~/.tmux/status-right.sh)"
# }}}
# Vim mode {{{
	set-option -g word-separators ' @"=()[].,:;/|'
	set-option -ag word-separators "'"

	set-option -g mode-keys vi
	bind-key c copy-mode

	# bind-key -T copy-mode-vi y send-keys -X copy-pipe 'xclip -in -selection clipboard'
	bind-key -T copy-mode-vi v send-keys -X begin-selection

	bind-key -T copy-mode-vi H send-keys -X start-of-line
	bind-key -T copy-mode-vi L send-keys -X end-of-line
#}}}
# Utilities {{{
	# ref: https://medium.com/@dubistkomisch/how-to-actually-get-italics-and-true-colour-to-work-in-iterm-tmux-vim-9ebe55ebc2be

	# set -g default-terminal "screen-256color"
	# set -g default-terminal 'tmux-256color'
	set -g default-terminal 'xterm-kitty'

	set-option -sg escape-time 10

	set -g default-shell /bin/zsh

	# Enable true color (Tc) and italics (sitm)
	set -ga terminal-overrides ',*:Tc:sitm=\E[3m'

	# Use the correct cursor shape in neovim
	# https://github.com/neovim/neovim/wiki/FAQ#cursor-shape-doesnt-change-in-tmux
	set -g -a terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'

	set -g focus-events on

	# Enable the system clipboard
	# https://github.com/tmux/tmux/wiki/Clipboard#changing-set-clipboard
	set -s set-clipboard on
# }}}
