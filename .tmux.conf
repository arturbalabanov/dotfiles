# Ctrl-a for prefix {{{
	unbind C-b
	set -g prefix C-a
	bind C-a send-prefix
# }}}
# Key bindings {{{
	bind-key -n C-M-h select-window -t :-
	bind-key -n C-M-l select-window -t :+

	# Move windows (tabs) to left and right
	bind-key -n C-M-S-l swap-window -t +1\; select-window -t +1
	bind-key -n C-M-S-h swap-window -t -1\; select-window -t -1

	is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?\.?(view|n?vim?x?)(-wrapped)?(diff)?$'"

	bind-key -n 'M-h' if-shell "$is_vim" 'send-keys M-h' { if -F '#{pane_at_left}' '' 'select-pane -L' }
	bind-key -n 'M-j' if-shell "$is_vim" 'send-keys M-j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
	bind-key -n 'M-k' if-shell "$is_vim" 'send-keys M-k' { if -F '#{pane_at_top}' '' 'select-pane -U' }
	bind-key -n 'M-l' if-shell "$is_vim" 'send-keys M-l' { if -F '#{pane_at_right}' '' 'select-pane -R' }

	# Split window
	bind-key C-j split-window -v -l 33%
	bind-key C-l split-window -h -l 33%
	bind-key C-k split-window -v -l 66% \; select-pane -l
	bind-key C-h split-window -h -l 66% \; select-pane -l

	# Move to the next/previous/last session with prefix + [/]/-
	bind-key [ switch-client -p
	bind-key ] switch-client -n
	bind-key - switch-client -l

	# Toggle status line
	bind-key C-s set status

	# Repeat the last command if not in vim
	bind-key -n F5 if-shell "$is_vim" "send-keys F5"  "send-keys C-c Up Enter"

	# New window with n
	bind-key n new-window

	# TODO: this doesn't work on popup windows
	# Zoom in with prefix + z
	bind-key z resize-pane -Z

	# New floating (popup) window with prefix + f
	bind-key f display-popup -E
	
	# New large floating (popup) window with prefix + Shift-f
	bind-key F display-popup -E -w 80% -h 80%

	# make Ctrl-Enter and Shift-Enter work in tmux
	# ref: https://stackoverflow.com/questions/16359878/how-to-map-shift-enter#comment124634141_42461580
	bind -n C-Enter send-keys Escape "[13;5u"
	bind -n S-Enter send-keys Escape "[13;2u"

	# sesh integration with C-a s
	# ref: https://github.com/joshmedeski/sesh?tab=readme-ov-file#tmux--fzf

	# NOTE: --hide-duplicates of sesh list doesn't work as expected as it hides them based on the path and that path
	# is always set to "" for tmuxinator sessions (see sesh list --json --tmuxinator). As a workarround we use the
	# awk command to filter out duplicates based on the second column (the session name). Also that way we don't need to
	# rely on the path being unique as this is not the case for some dotfile sessions

	bind-key s run-shell "sesh connect \"$(
		sesh list --tmux --tmuxinator --config --icons \
			| awk '!seen[$2]++' \
			| fzf-tmux -p 80%,70% \
				--no-sort --ansi --reverse \
				--border-label ' sesh ' \
				--prompt '‚ö°  ' \
				--header '^a all ^g configs ^x zoxide ^d kill ^f find' \
				--bind 'tab:down,btab:up' \
				--bind 'ctrl-a:change-prompt(‚ö°  )+reload(sesh list --icons)' \
				--bind 'ctrl-g:change-prompt(‚öôÔ∏è  )+reload(sesh list --icons --config --tmuxinator)' \
				--bind 'ctrl-x:change-prompt(üìÅ  )+reload(sesh list --icons --zoxide)' \
				--bind 'ctrl-f:change-prompt(üîé  )+reload(fd -H -d 2 -t d -E .Trash . ~/dev)' \
				--bind 'ctrl-d:execute(tmux kill-session -t {2..})+change-prompt(‚ö°  )+reload(sesh list --tmux --tmuxinator --config --icons)' \
				--preview-window 'right:55%' \
				--preview 'sesh preview {}'
	)\""

# }}}
# Mouse mode {{{
	set-option -g mouse on

	# disable right click menu
	unbind-key -n MouseDown3Pane

	# set-option -g mouse-utf8 off
# }}}
# Status line {{{
	set-option -g status on
	set-option -g status-interval 2
	set-option -g status-justify "centre"
	set-option -g status-left-length 60
	set-option -g status-right-length 90

    set-option -g status-bg "#1d2021"
    set-option -g status-fg "colour255"
	# set-option -g window-status-current-fg colour255

	set-option -g message-style "fg=colour255,bg=#1d2021"

	set-window-option -g pane-border-format " #T "

	set-window-option -g window-status-format "#{?#{==:#I,0},,#{?#{!=:#(echo $((#I-1))),#(tmux list-windows | grep '(active)' | grep -o '^[0-9][0-9]*')},ÓÇ± ,}}#W"
	set-window-option -g window-status-current-format "#[fg=#1d2021, bg=blue]ÓÇ∞#[fg=colour255, bg=blue] #W #{?window_zoomed_flag,#{?#{==:#T,#H},ÔÄé ,ÓÇ± #T },}#[fg=blue, bg=#1d2021]ÓÇ∞"
	set-window-option -g status-left "#[fg=colour255 bg=darkred] #S.#I.#P #[fg=darkred, bg=#2d2021]ÓÇ∞"
 
	vim_pane_pid="\
		ps -o state= -o comm -o pid= -t '#{pane_tty}' \
		| grep -iE '^[^TXZ ]+\\s+\\S+\\s+\\d+$' \
		| awk '{print \"pid:\"$3\"[\"$2\"]\" }' \
	"
	set-window-option -g status-right "#($vim_pane_pid)"
# }}}
# Vim mode {{{
	set-option -g word-separators ' @"=()[].,:;/|'
	set-option -ag word-separators "'"

	set-option -g mode-keys vi
	bind-key c copy-mode

	bind-key -T copy-mode-vi v send-keys -X begin-selection
	bind-key -T copy-mode-vi 'C-v' send-keys -X rectangle-toggle
	bind-key -T copy-mode-vi y send-keys -X copy-pipe 'pbcopy'

	bind-key -T copy-mode-vi H send-keys -X start-of-line
	bind-key -T copy-mode-vi L send-keys -X end-of-line
#}}}
# Utilities {{{
	# ref: https://medium.com/@dubistkomisch/how-to-actually-get-italics-and-true-colour-to-work-in-iterm-tmux-vim-9ebe55ebc2be

	# set -g default-terminal "screen-256color"
	# set -g default-terminal 'tmux-256color'
	set -g default-terminal 'xterm-kitty'

	set-option -sg escape-time 10

	set -g default-shell /bin/zsh

	# Enable true color (Tc) and italics (sitm)
	set -ga terminal-overrides ',*:Tc:sitm=\E[3m'

	# Use the correct cursor shape in neovim
	# https://github.com/neovim/neovim/wiki/FAQ#cursor-shape-doesnt-change-in-tmux
	set -g -a terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'

	set -g focus-events on

	# Enable the system clipboard
	# https://github.com/tmux/tmux/wiki/Clipboard#changing-set-clipboard
	set -s set-clipboard on

	# don't exit from tmux when closing a session
	set -g detach-on-destroy off  
# }}}

# vim:fileencoding=utf-8:foldmethod=marker
