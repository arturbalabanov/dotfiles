# vim: ft=zsh

if type lsd > /dev/null; then
	alias ls='lsd'
else
	alias ls='ls --color=auto'
fi
alias ll='ls -lh'
alias la='ll -a'
alias grep='grep --color=auto --exclude-dir=.cvs --exclude-dir=.git --exclude-dir=.hg --exclude-dir=.svn'
alias tree='tree -C'
alias vi='nvim'
alias vim='nvim'
alias s='sudo'
alias se='sudoedit'
alias pac='pikaur'
alias open='xdg-open'
alias wget='wget -c'
alias lynx='lynx -lss=~/.lynx.lss'
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'
alias ......='cd ../../../../..'
alias info='info --vi-keys'      # GNU info act like man command
alias emacs='emacs -nw'          # cli mode
alias cdtmp='cd $(mktemp -d)'
alias raliases='source ~/.aliases'
alias rm='rm -rf'
alias dad="curl -k https://icanhazdadjoke.com/ && echo"
alias cb-copy="xclip -selection clipboard"

if type thefuck > /dev/null; then
	eval $(thefuck --alias)
else
	alias fuck='eval "sudo $(fc -ln -1)"'
fi

# Global aliases are a zsh-specific feature
if [ -n "$ZSH_VERSION" ]; then
	alias -g G='| grep -i'
	alias -g L='| less'
	alias -g H='| head'
	alias -g T='| tail'
fi

function mkcd() { mkdir -p "$@" && cd "$_"; }
function yadm_update() {
	local commit_msg="Updated dotfiles $(date +'%Y-%m-%d %H:%M %Z') from $(yadm config local.class)"
	yadm commit -am "$commit_msg" && yadm push;
}

unalias gd
function gd() {
	# Stolen from: https://stackoverflow.com/a/4864668/2456167

	inside_git_repo=$(git rev-parse --is-inside-work-tree 2>/dev/null)

	if [[ ! $inside_git_repo ]]; then 
		echo "error: not inside a git repo" >&2
		return 1
	fi
	
	pager=$(git config --get pager.diff)
	if [[ -z "$pager" ]]; then
		pager=less
	fi

	if [[ "$#" -eq 0 ]]; then
		(
			git diff --color
			git ls-files --others --exclude-standard |
				while read -r i; do git diff --color -- /dev/null "$i"; done
		) | $pager
	else
		git diff "$@"
	fi
}

function venv {
    if [[ -f "poetry.lock" ]]; then
        venv_path=$(poetry env info -p)
    elif [[ -f "Pipfile.lock" ]]; then
        venv_path=$(pipenv --venv)
    else
        echo "No poetry.lock or Pipfile.lock found :("
        return 1
    fi

	source $venv_path/bin/activate
}

function review_pass {
	filename=$(find ~/7bridges -name populate_dev_users.py)
	password=$(cat $filename| grep set_password | sed "s/.*set_password('\(.*\)')/\1/")

	echo $password

	if type xclip > /dev/null; then
		echo -n $password | xclip -selection clipboard
	fi
}

if [[ $OSTYPE == 'darwin'* ]]; then
    if type brew > /dev/null; then
        alias brew='env PATH="${PATH//$(pyenv root)\/shims:/}" brew'
    fi
fi
