# For the zsh theme -- if the user is DEFAULT_USER, it is not shown
export DEFAULT_USER="artur"

alias -g SU='--snapshot-update'
alias -g VU='--vcr-renew'
alias -g NW='-p no:warnings'
alias -g NH='--no-headless'

export PYENV_ROOT="$HOME/.pyenv"
command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"

# export PIPX_DEFAULT_PYTHON="$PYENV_ROOT/versions/3.10.6/bin/python"

function repl {
	if [[ "$#" -lt 2 ]]; then
		echo "usage: $0 <shell> <env> [service=platform]" >&2
		return 1
	fi

	# TODO: Add Atlas and LW

	shell="$1"
	env="$2"
	service_name="${3:-platform}"

	aws_default_region="eu-west-1"
	aws_storage_bucket_name="7b-dev-media-$aws_default_region"

	if [[ $env == "staging" ]]; then
		db_url="$(pass show staging_db_url)/staging"
		aws_access_key_id="$(pass show staging_aws_access_key_id)"
		aws_secret_access_key="$(pass show staging_aws_secret_access_key)"
	elif [[ $env =~ "^(kube|review)\-" ]]; then
		# Review instance, the platofrm DB name is the same as the container
		# (environment)
		db_name="$2"

		db_url="$(pass show staging_db_url)/$db_name"
		aws_access_key_id="$(pass show staging_aws_access_key_id)"
		aws_secret_access_key="$(pass show staging_aws_secret_access_key)"
	elif [[ $env == "prod" ]]; then
		db_url="$(pass show prod_db_url)/platform"	
		aws_access_key_id="$(pass show prod_aws_access_key_id)"
		aws_secret_access_key="$(pass show prod_aws_secret_access_key)"
	else
		echo "invalid environment: $env" >&2
		return 1
	fi

	export AWS_DEFAULT_REGION="$aws_default_region"
	export AWS_STORAGE_BUCKET_NAME="$aws_storage_bucket_name"
	export AWS_ACCESS_KEY_ID="$aws_access_key_id"
	export AWS_SECRET_ACCESS_KEY="$aws_secret_access_key"

	if [[ $shell == "py" ]]; then
		cd ~/dev/sid/seven_bridges
		venv
		DATABASE_URL="$db_url"  ./manage.py shell_plus
	elif [[ $shell == 'pg' || $shell == 'db' || $shell == 'sql' ]]; then
		pgcli "$db_url"
	else
		echo "invalid shell: $shell" >&2
		return 1
	fi
}
