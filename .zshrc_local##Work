# For the zsh theme -- if the user is DEFAULT_USER, it is not shown
export DEFAULT_USER="arturb"

export GOPATH=$HOME/go
export PATH=$PATH:/usr/local/go/bin:$GOPATH/bin

alias pgcli='~/side/pgcli/venv/bin/pgcli'

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  # This loads nvm

function venv {
    source venv/bin/activate && export PYTHONPATH=`pwd`;
}

function pgssh {
	if [[ "$#" -lt 2 || "$#" -gt 3 ]]; then
		echo "Usage: $0 <db name> <env> [-w]"
		return 1
	fi

	db_name="$1"
	env="$2"
	flags="$3"

	if [[ $env == 'live' ]]; then
		container="${db_name}db"

		if [[ $flags == '-w' ]]; then
			username='colin'
			password='c0l1n'
		else
			username='readonly'
			password='r3ad0nly'
		fi
	else
		container="$env"
		username='colin'
		password='c0l1n'
	fi

	export PGPASSWORD="$password"
	pgcli -h $container -U "$username" $db_name
}

function logssh {
	if [[ "$#" -lt 2 ]]; then
		echo "Usage: $0 <service> <env> [<journalctl_args>]"
		return 1
	fi

	service="$1"
	env="$2"
	#
	# The printf is quite important -- it deals with whitespace in the arguments
	# ref: https://stackoverflow.com/q/1668649/
	journalctl_args=$(printf " %q" ${@:3})

	if [[ $env == 'live' ]]; then
		container="$service.mustard"
	else
		container="$env"
	fi

	ssh -t $container "sudo journalctl -u $service.service $journalctl_args"
}

function jira-links {
	MAIN_GITLAB='https://gitlab.mustardsystems.com/mustard'
	MAIN_PHABRICATOR='https://phabricator.mustardsystems.com'

	DEFAULT_REPO='colinbet'

	for handle in ${(z)1}; do
		if [[ $handle =~ '^(\w{1,})?\!([0-9]{1,})$' ]]; then
			repo=${match[1]:-$DEFAULT_REPO}
			mr_id=$match[2]

			gitlab_url="$MAIN_GITLAB/$repo/merge_requests/$mr_id"
			echo "[$repo!$mr_id|$gitlab_url]"
		elif [[ $handle =~ '^(\w{1,})?\#([0-9]{1,})$' ]]; then
			repo=${match[1]:-$DEFAULT_REPO}
			issue_id=$match[2]

			gitlab_url="$MAIN_GITLAB/$repo/issues/$issue_id"
			echo "[$repo#$issue_id|$gitlab_url]"
		elif [[ $handle =~ '^[0-9a-f]{5,40}$' ]]; then
			commit_hash=$MATCH
			commit_hash_short=$(echo $commit_hash | cut -c1-7)
			gitlab_url="$MAIN_GITLAB/$DEFAULT_REPO/commit/$commit_hash"
			echo "[{{$commit_hash_short}}|$gitlab_url]"
		elif [[ $handle =~ '^T[0-9]{1,6}$' ]]; then
			phabtricator_task_id=$MATCH
			phabtricator_url="$MAIN_PHABRICATOR/$phabtricator_task_id"
			echo "[$phabtricator_task_id|$phabtricator_url]"
		fi
	done
}

function remoteedit {
	if [[ "$#" -ne 2 ]]; then
		echo "Usage: $0 <filepath> <container>"
		return 1
	fi

	filepath="$1"
	container="$2"
	editor_flags=""

	# If relative path, assume we want to edit a file in the colinbet repo
	if [[ $filepath =~ '^(\w{1,})/' ]]; then
		filepath="/home/colin/colinbet/${match[1]}/$filepath"
		editor_flags=+'source ~/dev/colinbet/.lvimrc | exe "set ft=" . &ft'
	fi

	$EDITOR $editor_flags "scp://$USER@$container/$filepath"
}

alias re=remoteedit

function gl-review {
	gitlab-tool --token="$(pass show gitlab-private-token)" review --team=plum $@
}

function py2.7 {
	( cd ~/side/py2.7 && source venv/bin/activate && ptpython )
}
